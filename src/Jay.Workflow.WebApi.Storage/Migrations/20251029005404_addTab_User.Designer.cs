// <auto-generated />
using System;
using Jay.Workflow.WebApi.Storage.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jay.Workflow.WebApi.Storage.Migrations
{
    [DbContext(typeof(WorkflowDbContext))]
    [Migration("20251029005404_addTab_User")]
    partial class addTab_User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<string>("DeptIcon")
                        .HasColumnType("longtext")
                        .HasColumnName("dept_icon")
                        .HasComment("部门图标");

                    b.Property<Guid>("DeptId")
                        .HasColumnType("char(36)")
                        .HasColumnName("dept_id")
                        .HasComment("部门id");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dept_name")
                        .HasComment("部门名称");

                    b.Property<int?>("DeptTypeId")
                        .HasColumnType("int")
                        .HasColumnName("dept_type_id")
                        .HasComment("部门类型id");

                    b.Property<string>("DeptTypeName")
                        .HasColumnType("longtext")
                        .HasColumnName("dept_type_name")
                        .HasComment("部门类型名称");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<Guid?>("ParentDeptId")
                        .HasColumnType("char(36)")
                        .HasColumnName("parent_dept_id")
                        .HasComment("上级部门id");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark")
                        .HasComment("备注");

                    b.Property<int>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no")
                        .HasComment("排序");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("启用状态，0：禁用，1：启用");

                    b.HasKey("Id");

                    b.ToTable("department", t =>
                        {
                            t.HasComment("部门表");
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("AppId")
                        .HasColumnType("char(36)")
                        .HasColumnName("app_id")
                        .HasComment("应用id");

                    b.Property<int?>("ButtonType")
                        .HasColumnType("int")
                        .HasColumnName("button_type")
                        .HasComment("按钮类型");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext")
                        .HasColumnName("icon")
                        .HasComment("图标");

                    b.Property<bool>("IsShow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_show")
                        .HasComment("是否显示");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("parent_id")
                        .HasComment("上级id");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("resource_id")
                        .HasComment("资源id");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("resource_name")
                        .HasComment("资源名称");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int")
                        .HasColumnName("resource_type")
                        .HasComment("资源类型");

                    b.Property<string>("ResourceUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("resource_url")
                        .HasComment("资源Url");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("sort")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("resource", t =>
                        {
                            t.HasComment("资源表");
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("role_code")
                        .HasComment("角色编码");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("longtext")
                        .HasColumnName("role_description")
                        .HasComment("角色描述");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id")
                        .HasComment("角色id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("role_name")
                        .HasComment("角色名称");

                    b.HasKey("Id");

                    b.ToTable("role", t =>
                        {
                            t.HasComment("角色表");
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.RoleResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("resource_id")
                        .HasComment("资源id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id")
                        .HasComment("角色ID");

                    b.HasKey("Id");

                    b.ToTable("role_resource", t =>
                        {
                            t.HasComment("角色资源表");
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.SystemConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("config_key")
                        .HasComment("配置key");

                    b.Property<string>("ConfigName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("config_name")
                        .HasComment("配置名称");

                    b.Property<int>("ConfigType")
                        .HasColumnType("int")
                        .HasColumnName("config_type")
                        .HasComment("配置类型");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("config_value")
                        .HasComment("配置值");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<string>("ExtData")
                        .HasColumnType("longtext")
                        .HasColumnName("ext_data")
                        .HasComment("扩展数据");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark")
                        .HasComment("备注");

                    b.Property<int>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no")
                        .HasComment("排序编号");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("启用状态，0：禁用，1：启用");

                    b.HasKey("Id");

                    b.ToTable("system_config", t =>
                        {
                            t.HasComment("系统配置表");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfigKey = "IsEnableSwagger",
                            ConfigName = "是否启用Swagger",
                            ConfigType = 2,
                            ConfigValue = "true",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Creator = 0,
                            ExtData = "",
                            SortNo = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<string>("UserAvatar")
                        .HasColumnType("longtext")
                        .HasColumnName("user_avatar")
                        .HasComment("用户头像");

                    b.Property<string>("UserEmail")
                        .HasColumnType("longtext")
                        .HasColumnName("user_email")
                        .HasComment("用户邮箱");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id")
                        .HasComment("用户id");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_name")
                        .HasComment("用户名称");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_phone")
                        .HasComment("用户手机号");

                    b.HasKey("Id");

                    b.ToTable("user", t =>
                        {
                            t.HasComment("用户表");
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.UserDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<Guid>("DeptId")
                        .HasColumnType("char(36)")
                        .HasColumnName("dept_id")
                        .HasComment("部门id");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id")
                        .HasComment("用户id");

                    b.HasKey("Id");

                    b.ToTable("user_department", t =>
                        {
                            t.HasComment("用户部门表");
                        });
                });

            modelBuilder.Entity("Jay.Workflow.WebApi.Storage.Entity.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_time");

                    b.Property<int>("Creator")
                        .HasColumnType("int")
                        .HasColumnName("creator");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_time");

                    b.Property<int?>("Deleter")
                        .HasColumnType("int")
                        .HasColumnName("deleter");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_time");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int")
                        .HasColumnName("modifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id")
                        .HasComment("角色ID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id")
                        .HasComment("用户id");

                    b.HasKey("Id");

                    b.ToTable("user_role", t =>
                        {
                            t.HasComment("用户角色表");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
